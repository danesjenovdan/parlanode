<% include ../partials/header.ejs %>

<div id="member-list-generator-container" v-cloak>
    <div class="member-list-generator">
      <div class="row">
        <div class="col-md-12">
          <ul class="analyses">
            <li v-for="analysis in analyses"
                :class="{ selected: analysis.id === currentAnalysis }"
                @click="selectAnalysis(analysis.id)">
              <span>{{ analysis.label }}</span>
            </li>
          </ul>

          <div class="mobile-analyses">
            <label for="analysis">Izberi analizo</label>
            <div class="select">
              <select
                name="analysis"
                id="analysis"
                v-model="currentAnalysis"
                @change="selectAnalysis(currentAnalysis)">
                <option
                  v-for="analysis in analyses"
                  :value="analysis.id">
                  {{ analysis.label }}
                </option>
              </select>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-12 parties-districts">
          <ul class="parties">
            <li v-for="party in parties" class="party-button"
                :class="[{ selected: currentParties.indexOf(party) > -1 }, party.replace(/ /g, '_').toLowerCase(), party.replace(/ /g, '_').toLowerCase() + '-hover']"
                @click="selectParty(party)">
              {{ party }}
            </li>
          </ul>

          <search-dropdown class="districts" :items="districts" :placeholder="inputPlaceholder"></search-dropdown>

          <div class="exclude-presiding">
            <input id="predsedujoci" type="checkbox" v-model="excludePresiding" class="checkbox">
            <label for="predsedujoci">Skrij predsedujoče</label>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-md-12">
          <div class="card-container card-halfling card-seznam-poslancev">
            <div class="card-header">
              <div class="card-header-border"></div>
              <h1>Seznam poslancev{{ currentAnalysisData.titleSuffix }}</h1>
            </div>
            <div class="card-content">
              <div class="card-content-front">
                <ul class="person-list">
                  <li class="headers">
                    <div v-for="column in columns"
                        :class="['column', column.additionalClass, { sort: currentSort === column.id }, { reverse: currentSortOrder === 'desc' }]"
                        @click="selectSort(column.id)">
                      {{ column.label }}
                    </div>
                  </li>
                  <li v-if="memberData.length === 0" class="loader">
                    <div class="nalagalnik"></div>
                  </li>
                  <div v-if="memberData.length > 0 && processedMemberData.length === 0" class="no-results">Brez rezultatov.</div>
                  <li v-for="member in processedMemberData" class="person">
                    <a class="portrait column" :href="getMemberUrl(member.person.id)">
                      <img :src="'https://cdn.parlameter.si/v1/parlassets/img/people/square/' + member.person.gov_id + '.png'" />
                    </a>
                    <div class="column wider name">
                      <a class="funblue-light-hover" :href="getMemberUrl(member.person.id)">{{ member.person.name }}</a>
                    </div>
                    <div class="column">
                      <a v-if="member.partylink" class="funblue-light-hover" :href="getPartyUrl(member.person.party)">{{ member.person.party.acronym }}</a>
                      <template v-else>{{ member.person.party.acronym }}</template>
                    </div>
                    <div class="column district">{{ member.person.formattedDistrict }}</div>
                    <template v-if="currentAnalysis !== 'alphabetical'">
                      <div class="column">{{ getFormattedAnalysisValue(member) }}</div>
                      <div class="column">{{ getFormattedChangeValue(member) }}</div>
                    </template>
                  </li>
                </ul>
              </div>
              <div class="card-content-info hidden">
                <div class="card-back-content" v-html="infoText">
                </div>
              </div>
              <div class="card-content-embed hidden">
                <div class="card-back-content">
                  <div class="embed-content">
                    <div class="embed-divider"></div>
                    <div class="embed-switch-container">
                      <div class="embed-label">Podatki naj se vedno osvežujejo</div>
                      <div class="embed-switch-big-box">
                        <div class="embed-switch-box">
                          <div class="embed-switch">
                            <div class="embed-switches">
                              <div class="leftswitch">DA</div>
                              <div class="rightswitch">NE</div>
                            </div>
                          </div>
                        </div>
                        <div class="embed-switch-ball"></div>
                      </div>
                    </div>
                    <div class="embed-divider"></div>
                    <div class="embed-script">
                      <textarea class="form-control" data-id="0" data-url="https://glej.parlameter.si/p/seznam-poslancev/"><script>(function(d,script){script=d.createElement('script');script.type='text/javascript';script.async=true;script.onload=function(){iFrameResize({log:true,checkOrigin:false})};script.src = 'https://cdn.parlameter.si/v1/parlassets/js/iframeResizer.min.js';d.getElementsByTagName('head')[0].appendChild(script);}(document));</script><iframe frameborder="0" width="100%" src="{{ generatedCardUrl }}&embed=true"></iframe></textarea>
                      <button class="btn-parlameter btn-full-width btn-blue btn-copy-embed">KOPIRAJ</button>
                    </div>
                  </div>
                </div>
              </div>
              <div class="card-content-share hidden">
                <div class="card-back-content card-content">
                  <div class="share-content">
                    <label for="share-url">Neposredna povezava do kartice</label>
                    <input type="url" class="form-control share-url" id="share-url" :value="shortenedCardUrl"/>
                    <button class="btn-parlameter btn-full-width btn-blue">KOPIRAJ</button>
                  </div>
                </div>
              </div>
            </div>
            <div class="card-footer" data-shortened="true">
              <div class="card-circle-button card-share" data-back="share"></div>
              <div class="card-circle-button card-embed" data-back="embed"></div>
              <div class="card-circle-button card-info" data-back="info">i</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
  new Vue({
    el: '#member-list-generator-container',
    components: ['SearchDropdown'],
    data: {
      memberData: [],
      districts: [],
      currentSort: 'name',
      currentSortOrder: 'asc',
      currentAnalysis: 'alphabetical',
      analyses: [
        {
          id: 'alphabetical',
          titleSuffix: '',
          label: 'Abecedni seznam',
        },
        {
          id: 'presence_sessions',
          titleSuffix: ' po prisotnosti na sejah DZ',
          explanation: 'Preštejemo vse seje in preverimo, če je poslanec glasoval na vsaj enem glasovanju na posamezni seji. Če je glasoval vsaj enkrat, ga štejemo kot prisotnega na posamezni seji. Delimo število sej, ko je bil prisoten, s številom vseh sej in normaliziramo (min 1 - max 100).<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Prisotnost na sejah DZ',
          round: true,
          unit: 'percent'
        },
        {
          id: 'presence_votes',
          titleSuffix: ' po prisotnosti na glasovanjih sej DZ',
          explanation: 'Število glasovanj, ko je bil poslanec prisoten, delimo s številom vseh glasovanj in normaliziramo (min 1 - max 100).<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Prisotnost na glasovanjih sej DZ',
          round: true,
          unit: 'percent'
        },
        {
          id: 'vocabulary_size',
          titleSuffix: ' po raznolikosti besedišča',
          explanation: 'Iz vseh poslančevih govorov preštejemo unikatne besede ter število vseh izgovorjenih besed. Potem preštejemo, kolikokrat se vsaka unikatna beseda pojavi. Razdelimo jih v kategorije, tako da združimo vse besede, ki se ponovijo enkrat, dvakrat, trikrat itn. Na koncu izračunamo koeficient, kjer nad ulomkovo črto postavimo število vseh unikatnih izgovorjenih besed, pod ulomkovo črto pa število besed, ki se ponovijo z neko frekvenco (enkrat, dvakrat, trikrat ...) in množimo s frekvenco na kvadrat (ena na kvadrat, dva na kvadrat, tri na kvadrat ...). Za poved "Danes je nov dan in danes je dan za Parlameter" je rezultat: 7 / ((3*2^2) + (4*1^2)) = 0,4375<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Raznolikost besedišča'
        },
        {
          id: 'spoken_words',
          titleSuffix: ' po št. izgovorjenih besed',
          explanation: 'Število besed, ki jih je poslanec izgovoril v vseh svojih dosedanjih govorih v DZ.<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Št. izgovorjenih besed'
        },
        {
          id: 'speeches_per_session',
          titleSuffix: ' po št. govorov na sejo',
          explanation: 'Preštejemo poslančeve govore in število delimo s številom sej, na katerih je poslanec govoril. Število vseh govorov delimo najprej s številom poslancev, potem pa še s številom vseh sej (na katerih se je govorilo). Individualni rezultat primerjamo s povprečnim.<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Št. govorov na sejo'
        },
        {
          id: 'privzdignjeno',
          titleSuffix: ' po pogostosti rabe privzdignjenega besedja',
          explanation: 'Z združevanjem kvalifikatorjev <a href="http://www.fran.si/130/sskj-slovar-slovenskega-knjiznega-jezika">SSKJ</a> in <a href="http://www.fran.si/131/snb-slovar-novejsega-besedja">SNB</a> smo definirali ekscesno, privzdignjeno in preprosto besedje v poslanskih govorih. Upoštevani so le kvalifikatorji, ki so v obeh slovarjih tik za zaglavjem in imajo doseg do konca geselskega sestavka (ne pa tudi kvalifikatorji za posamezne pomene oziroma rabe). Podjetje Amebis je iz transkriptov poslanskih govorov pripravilo sezname besed, ki imajo katerega od izbranih kvalifikatorjev.<br>' +
            'Kvalifikatorji iz SSKJ: ' +
            'evfemistično (evfem.), mitološko (mitol.), pesniško (pesn.), knjižno (knjiž.), zastarelo (zastar.), starinsko (star.)<br>' +
            '<br>' +
            '<br>' +
            'Vrednost v stolpcu analiza označuje delež posameznega tipa besedja v poslančevih govorih glede na povprečje, izračunano za celoten sklic.<br>' +
            'Delež se izračuna po naslednjem algoritmu: vzamejo se vsi poslančevi govori, prešteje se število besed (in njihovih ponovitev) v vsaki kategoriji besedja. To se izvede za vse poslance, nato se deli vrednost kategorije za poslanca z vrednostjo povprečja (seštevek vrednosti vseh poslancev, deljen s številom poslancev). Vrednost vsake kategorije za poslanca se normalizira (min. 1 – max. 100).<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Privzdignjeno besedje',
          round: true,
          roundingPrecision: 3
        },
        {
          id: 'preprosto',
          titleSuffix: ' po pogostosti rabe preprostega besedja',
          explanation: 'Z združevanjem kvalifikatorjev <a href="http://www.fran.si/130/sskj-slovar-slovenskega-knjiznega-jezika">SSKJ</a> in <a href="http://www.fran.si/131/snb-slovar-novejsega-besedja">SNB</a> smo definirali ekscesno, privzdignjeno in preprosto besedje v poslanskih govorih. Upoštevani so le kvalifikatorji, ki so v obeh slovarjih tik za zaglavjem in imajo doseg do konca geselskega sestavka (ne pa tudi kvalifikatorji za posamezne pomene oziroma rabe). Podjetje Amebis je iz transkriptov poslanskih govorov pripravilo sezname besed, ki imajo katerega od izbranih kvalifikatorjev.<br>' +
            'Kvalifikatorji iz SSKJ: ' +
            'narečno (nar.), pogovorno (pog.), nižje pogovorno (nižje pog.) <br>' +
            'Kvalifikatorji iz SNB<br>' +
            'pogovorno (pog.)<br>' +
            '<br>' +
            'Vrednost v stolpcu analiza označuje delež posameznega tipa besedja v poslančevih govorih glede na povprečje, izračunano za celoten sklic.<br>' +
            'Delež se izračuna po naslednjem algoritmu: vzamejo se vsi poslančevi govori, prešteje se število besed (in njihovih ponovitev) v vsaki kategoriji besedja. To se izvede za vse poslance, nato se deli vrednost kategorije za poslanca z vrednostjo povprečja (seštevek vrednosti vseh poslancev, deljen s številom poslancev). Vrednost vsake kategorije za poslanca se normalizira (min. 1 – max. 100).<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Preprosto besedje',
          round: true,
          roundingPrecision: 3
        },
        {
          id: 'problematicno',
          titleSuffix: ' po pogostosti rabe ekscesnega besedja',
          explanation: 'Z združevanjem kvalifikatorjev <a href="http://www.fran.si/130/sskj-slovar-slovenskega-knjiznega-jezika">SSKJ</a> in <a href="http://www.fran.si/131/snb-slovar-novejsega-besedja">SNB</a> smo definirali ekscesno, privzdignjeno in preprosto besedje v poslanskih govorih. Upoštevani so le kvalifikatorji, ki so v obeh slovarjih tik za zaglavjem in imajo doseg do konca geselskega sestavka (ne pa tudi kvalifikatorji za posamezne pomene oziroma rabe). Podjetje Amebis je iz transkriptov poslanskih govorov pripravilo sezname besed, ki imajo katerega od izbranih kvalifikatorjev.<br>' +
            'Kvalifikatorji iz SSKJ: ' +
            'vulgarno (vulg.), slabšalno (slabš.), ekspresivno (ekspr.), ironično (iron.), otroško (otr.) <br>' +
            'Kvalifikatorji iz SNB: ' +
            'slabšalno (slabš.), vulgarno (vulg.)<br>' +
            '<br>' +
            'Vrednost v stolpcu analiza označuje delež posameznega tipa besedja v poslančevih govorih glede na povprečje, izračunano za celoten sklic.<br>' +
            'Delež se izračuna po naslednjem algoritmu: vzamejo se vsi poslančevi govori, prešteje se število besed (in njihovih ponovitev) v vsaki kategoriji besedja. To se izvede za vse poslance, nato se deli vrednost kategorije za poslanca z vrednostjo povprečja (seštevek vrednosti vseh poslancev, deljen s številom poslancev). Vrednost vsake kategorije za poslanca se normalizira (min. 1 – max. 100).<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Ekscesno besedje',
          round: true,
          roundingPrecision: 3
        },
        {
          id: 'number_of_questions',
          titleSuffix: ' po št. poslanskih vprašanj in pobud',
          explanation: 'Število poslanskih vprašanj in pobud, ki jih je poslanec/-ka zastavil/-a v tem sklicu DZ v primerjavi s povprečno in največjo vrednostjo.' +
                            'Podatke pridobivamo s spletnega mesta DZ RS: <a href="https://www.dz-rs.si/wps/portal/Home/deloDZ/poslanskaVprasanjaInPobude/">https://www.dz-rs.si/wps/portal/Home/deloDZ/poslanskaVprasanjaInPobude/</a>.<br><br>V stolpcu Sprememba je razlika med vrednostima rezultatov analize v obdobju med zadnjima dvema rednima sejama DZ RS.',
          label: 'Št. poslanskih vprašanj in pobud',
          round: true,
          roundingPrecision: 0
        },
      ],
      currentParties: [],
      parties: ['DeSUS', 'IMNS', 'NSI', 'PS NP', 'SD', 'SDS', 'SMC', 'ZL'],
      excludePresiding: false,
      slugs: null,
      shortenedCardUrl: ''
    },
    computed: {
      columns: function() {
        var columns = [
          { id: 'name', label: 'Ime', additionalClass: 'wider' },
          { id: 'party', label: 'PS' },
          { id: 'district', label: 'Okraj', additionalClass: 'district' }
        ]

        if (this.currentAnalysis !== 'alphabetical') {
          columns.push({ id: 'analysis', label: 'Analiza' });
          columns.push({ id: 'change', label: 'Sprememba' });
        }

        return columns
      },
      currentAnalysisData: function() {
        var that = this,
            currentAnalysis

        this.analyses.forEach(function(analysis) {
          if (analysis.id === that.currentAnalysis) {
            currentAnalysis = analysis
          }
        })

        return currentAnalysis
      },
      currentDistricts: function() {
        return this.districts
          .filter(function(district) { return district.selected })
          .map(function(district) { return district.id })
      },
      currentDistrictNames: function() {
        return this.districts
          .filter(function(district) { return district.selected })
          .map(function(district) { return district.label })
      },
      inputPlaceholder: function() {
        return this.currentDistricts.length ? 'izbranih okrajev: ' + this.currentDistricts.length : 'izberi okraj'
      },
      processedMemberData: function() {
        var that = this
        var sortedAndFiltered = this.memberData
          .filter(function(member) {
            var partyMatch = true,
                districtMatch = true,
                presidingMatch = true

            if (that.currentParties.length > 0) {
              partyMatch = that.currentParties.indexOf(member.person.party.acronym) > -1
            }
            if (that.currentDistricts.length > 0) {
              districtMatch = member.person.district.reduce(function(prevMatch, memberDistrict) {
                return prevMatch || that.currentDistricts.indexOf(String(memberDistrict)) > -1
              }, false)
            }
            if (that.excludePresiding) {
              presidingMatch = !member.person.has_function
            }

            return partyMatch && districtMatch && presidingMatch
          })
          .map(function(member) {
            if (member.person.district.length === 0) {
              member.person.formattedDistrict = 'okraj ni vnešen'
            }
            else {
              member.person.formattedDistrict = member.person.district.map(function(memberDistrict) {
                var matchingDistrict = that.districts.filter(function(district) {
                  return district.id === String(memberDistrict)
                })[0]
                return matchingDistrict.label
              }).join(', ')
            }

            member.partylink = member.person.party.acronym.indexOf('NeP') === -1

            return member
          })
          .sort(function(memberA, memberB) {
            switch (that.currentSort) {
              case 'change':
                var a = memberA.results[that.currentAnalysis].diff
                var b = memberB.results[that.currentAnalysis].diff
                return a < b ? -1 : (a > b ? 1 : 0)
              case 'analysis':
                var a = memberA.results[that.currentAnalysis].score
                var b = memberB.results[that.currentAnalysis].score
                return a < b ? -1 : (a > b ? 1 : 0)
              case 'name':
                var a = memberA.person.name
                var b = memberB.person.name
                return a.localeCompare(b, 'sl')
              case 'district':
                var a = memberA.person.formattedDistrict
                var b = memberB.person.formattedDistrict
                return a.localeCompare(b, 'sl')
              case 'party':
                var a = memberA.person.party.acronym
                var b = memberB.person.party.acronym
                return a.localeCompare(b, 'sl')
              default:
                break
            }
          })

        if (this.currentSortOrder === 'desc') {
          sortedAndFiltered.reverse()
        }

        return sortedAndFiltered
      },
      generatedCardUrl: function() {
        var params = {}
        if (this.currentAnalysis !== 'alphabetical') {
          params.analysis = this.currentAnalysis
        }
        if (this.currentParties.length > 0) {
          params.parties = this.currentParties
        }
        if (this.currentDistricts.length > 0) {
          params.districts = this.currentDistricts
        }
        if (this.excludePresiding) {
          params.excludePresiding = true
        }

        return 'https://glej.parlameter.si/p/seznam-poslancev/' +
          '?customUrl=' + encodeURIComponent('https://analize.parlameter.si/v1/p/getListOfMembersTickers/') +
          (Object.keys(params).length > 0 ? '&state=' + encodeURIComponent(JSON.stringify(params)) : '')
      },
      infoText: function() {
        var parties = this.currentParties.length ? 'poslanska skupina: ' + this.currentParties.join(', ') : 'vse poslanske skupine'
        var districts = this.currentDistrictNames.length ? 'volilni okraj: ' + this.currentDistrictNames.join(', ') : 'vsi volilni okraji'
        var presiding = this.excludePresiding ? '; brez predsedujočih poslancev' : ''
        var firstLine = 'Množica vseh trenutno aktivnih poslancev, ki ustrezajo uporabniškemu vnosu (' + parties + '; ' + districts + presiding + ').'

        var sortMap = {
          name: 'abecedi',
          district: 'okrajih',
          party: 'poslanskih skupinah',
          analysis: 'rezultatu analize ' + this.currentAnalysisData.label,
          change: 'aktualni spremembi v rezultatu analize ' + this.currentAnalysisData.label
        }
        var secondLine = 'Seznam je sortiran po ' + sortMap[this.currentSort] + '.'

        var thirdLine = this.currentAnalysisData.explanation

        // return firstLine + '<br><br>' + secondLine + (thirdLine ? '<br><br>' + thirdLine : '')
        return '<p class="info-text lead">' + firstLine + ' ' + secondLine + '</p>' + (thirdLine ? '<p class="info-text heading">METODOLOGIJA</p><p class="info-text">' + thirdLine + '</p>' : '');
      }
    },
    created: function() {
      var that = this

      $.getJSON('https://analize.parlameter.si/v1/p/getSlugs/', function(response) {
        that.slugs = response
      })
      $.getJSON('https://analize.parlameter.si/v1/p/getListOfMembersTickers/', function(response) {
        that.districts = response.districts.map(function(district) {
          var id = Object.keys(district)[0]
          return {
            id: id,
            label: district[id],
            selected: false
          }
        })
        that.memberData = response.data
      })
      this.shortenUrl(this.generatedCardUrl)
    },
    methods: {
      selectAnalysis: function(analysisId) {
        this.currentAnalysis = analysisId

        if (this.currentAnalysis === 'alphabetical' && ['analysis', 'change'].indexOf(this.currentSort) > -1) {
          this.selectSort('name')
        }
        else {
          this.currentSort = 'analysis'
          this.currentSortOrder = 'desc'
        }
        this.measurePiwik(analysisId, '', '', '');
      },
      selectSort: function(sortId) {
        if (this.currentSort === sortId) {
          this.currentSortOrder = this.currentSortOrder === 'asc' ? 'desc' : 'asc'
        }
        else {
          this.currentSort = sortId
          this.currentSortOrder = 'asc'
        }
        this.measurePiwik('', '', sortId, this.currentSortOrder);
      },
      selectParty: function(partyId) {
        if (this.currentParties.indexOf(partyId) > -1) {
          this.currentParties.splice(this.currentParties.indexOf(partyId), 1)
        }
        else {
          this.currentParties.push(partyId)
        }
        this.measurePiwik('', partyId, '', '');
      },
      getFormattedAnalysisValue: function(member) {
        var value = member.results[this.currentAnalysis].score

        if (value === null) { return 'Ni dovolj podatkov' }

        if (value !== 0) {
          if (this.currentAnalysisData.round) { value = String(this.round(value, this.currentAnalysisData.roundingPrecision || 1)).replace('.', ',') }
          if (this.currentAnalysisData.scientific) { value = value.toExponential() }
        }
        if (this.currentAnalysisData.unit === 'percent') { value += '%' }

        return value
      },
      getFormattedChangeValue: function(member) {
        var change = parseFloat(member.results[this.currentAnalysis].diff).toFixed(this.currentAnalysisData.roundingPrecision);
        var number = Math.abs(change);
        var prefix = change < 0 ? '-\xa0' : (change > 0 ? '+\xa0' : '');

        return prefix + number;
      },
      getMemberUrl: function(memberId) {
        return this.slugs
          ? this.slugs.base + this.slugs.personLink.base + this.slugs.person[memberId].slug + this.slugs.personLink.pregled
          : '/p/id/' + String(memberId)
      },
      getPartyUrl: function(party) {
        return this.slugs
          ? this.slugs.base + this.slugs.partyLink.base + this.slugs.party[party.id].acronym + this.slugs.partyLink.pregled
          : '/poslanska-skupina/' + party.acronym + '/pregled'
      },
      shortenUrl: function(url) {
        var that = this
        $.get('https://parla.me/shortner/generate?url=' + window.encodeURIComponent(url + '&frame=true'), function(response) {
            that.shortenedCardUrl = response
            that.$el.querySelector('.card-content-share button').textContent = 'KOPIRAJ'
        });
      },
      round: function(value, precision) {
        var multiplier = Math.pow(10, precision || 0)
        return Math.round(value * multiplier) / multiplier
      },
      measurePiwik: function (analysisId, partyId, sort, order) {
        if(typeof measure == 'function') {
          if(sort!=''){
              measure("p","analysis-sort",sort+' '+order,'');
          }else if(partyId!=''){
              measure("p","analysis-party",partyId,'');
          }else if(analysisId!=''){
              measure("p","analysis",analysisId,'');
          }
        }
      }
    },
    watch: {
      generatedCardUrl: function(newValue) {
        this.shortenUrl(newValue)
      }
    }
  })

  makeEmbedSwitch()
  activateCopyButton()
  addCardRippling()

</script>

<% include ../partials/footer.ejs %>
