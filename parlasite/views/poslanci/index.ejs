<% include ../partials/header.ejs %>



<script src="https://unpkg.com/vue@next/dist/vue.js"></script>




<div id="member-list-generator-container"></div>

<script type="text/x-template" id="search-dropdown-template">
    <div class="districts search-dropdown" v-click-outside="function() { toggleDropdown(false) }">
        <input
                class="search-dropdown-input"
                type="text"
                v-model="filter"
                @focus="toggleDropdown(true)"
                :placeholder="placeholder">
        <ul class="search-dropdown-options" :class="{ visible: this.active }">
            <li
                    v-for="item in filteredItems"
                    :class="{ 'selected' : item.selected }"
                    @click.prevent="toggleItem(item)">
                {{ item.label }}
            </li>
        </ul>
    </div>
</script>

<script type="text/x-template" id="member-list-generator-template">
    <div class="container member-list-generator">
        <div class="row">
            <div class="col-md-12">
                <ul class="analyses">
                    <li v-for="analysis in analyses"
                        :class="{ selected: analysis.id === currentAnalysis }"
                        @click="selectAnalysis(analysis.id)">
                        <span>{{ analysis.label }}</span>
                    </li>
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 parties-districts">
                <ul class="parties">
                    <li v-for="party in parties" class="party-button"
                        :class="[{ selected: currentParty === party }, party.replace(/ /g, '_').toLowerCase()]"
                        @click="selectParty(party)">
                        {{ party }}
                    </li>
                </ul>

                <search-dropdown :items="districts" :placeholder="inputPlaceholder" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="card-container card-halfling card-seznam-poslancev">
                    <div class="card-header">
                        <div class="card-header-border"></div>
                        <h1>Seznam poslancev</h1>
                    </div>
                    <div class="card-content">
                        <ul class="person-list">
                            <li class="headers">
                                <div v-for="column in columns"
                                     :class="{ column: true, wider: column.wider, sort: currentSort === column.id, reverse: currentSortOrder === 'desc' }"
                                     @click="selectSort(column.id)">
                                    {{ column.label }}
                                </div>
                            </li>
                            <li v-for="member in processedMemberData" class="person">
                                <a class="portrait column" :href="'/p/id/' + member.person.id + ''">
                                    <img :src="'https://cdn.parlameter.si/v1/parlassets/img/people/square/' + member.person.gov_id + '.png'" />
                                </a>
                                <div class="column wider name">
                                    <a :href="'/p/id/' + member.person.id + ''">{{ member.person.name }}</a>
                                </div>
                                <div class="column">
                                    <a :href="'/ps/id/' + member.person.party.id + ''">{{ member.person.party.acronym }}</a>
                                </div>
                                <div class="column">{{ member.person.formattedDistrict }}</div>
                                <div v-if="currentAnalysis !== 'alphabetical'" class="column">
                                    {{ member.results[currentAnalysis] + (currentAnalysisData.unit === 'percent' ? '%' : '') }}
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="card-footer">
                        <div class="card-circle-button card-share"></div>
                        <div class="card-circle-button card-embed"></div>
                        <div class="card-circle-button card-info">i</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <h2>Generated url</h2>
                <p class="generated-url">{{ generatedCardUrl }}</p>
            </div>
        </div>
    </div>
</script>

<script>
    // Vue.directive('click-outside', )

    Vue.component('SearchDropdown', {
        data: function() {
            return {
                filter: '',
                active: false
            }
        },
        computed: {
            filteredItems: function() {
                var that = this
                return this.items
                        .filter(function(item) {
                            return item.selected || item.label.toLowerCase().indexOf(that.filter.toLowerCase()) > -1
                        })
                        .sort(function(a, b) {
                            if (Boolean(a.selected) === Boolean(b.selected)) {
                                return a.label.localeCompare(b.label)
                            }
                            else {
                                return a.selected && !b.selected ? -1 : 1
                            }
                        })
            }
        },
        directives: {
            clickOutside: {
                bind: function(el, binding) {
                    const handler = function(e) {
                        if (!el.contains(e.target) && el !== e.target) {
                            binding.value(e)
                        }
                    }
                    el.__vueClickOutside__ = handler
                    document.addEventListener('click', handler)
                },
                unbind: function(el) {
                    document.removeEventListener('click', el.__vueClickOutside__)
                    el.__vueClickOutside__ = null
                }
            }
        },
        template: '#search-dropdown-template',
        props: {
            items: { type: Array, required: true },
            placeholder: { type: String, required: true }
        },
        methods: {
            toggleItem: function(item, event) {
                item.selected = !item.selected
            },
            toggleDropdown: function(state, event) {
                if (state === false) {
                    this.filter = ''
                }
                this.active = state
            },
        }
    })

    new Vue({
        el: '#member-list-generator-container',
        template: '#member-list-generator-template',
        components: ['SearchDropdown'],
        data: {
            memberData: [],
            districts: [],
            currentSort: 'name',
            currentSortOrder: 'asc',
            currentAnalysis: 'alphabetical',
            analyses: [
                { id: 'alphabetical',         label: 'Abecedni seznam' },
                { id: 'presence_sessions',    label: 'Prisotnost na sejah DZ',           unit: 'percent' },
                { id: 'presence_votes',       label: 'Prisotnost na glasovanjih sej DZ', unit: 'percent' },
                { id: 'vocabulary_size',      label: 'Besedni zaklad' },
                { id: 'spoken_words',         label: 'Št. izgovorjenih besed' },
                { id: 'speeches_per_session', label: 'Št. govorov na sejo' },
                { id: 'privzdignjeno',        label: 'Privzdignjeno besedje' },
                { id: 'preprosto',            label: 'Preprosto besedje' },
                { id: 'problematicno',        label: 'Problematično besedje' },
            ],
            currentParty: null,
            parties: [ 'SMC', 'SDS', 'DeSUS', 'SD', 'ZL', 'NSI', 'PS NP', 'IMNS', 'NeP' ]
        },
        computed: {
            columns: function() {
                var columns = [
                    { id: 'name', label: 'Ime', wider: true },
                    { id: 'party', label: 'PS' },
                    { id: 'district', label: 'Okraj' }
                ]

                if (this.currentAnalysis !== 'alphabetical') {
                    columns.push({ id: 'analysis', label: this.currentAnalysisData.label })
                }

                return columns
            },
            currentAnalysisData: function() {
                var that = this,
                        currentAnalysis

                this.analyses.forEach(function(analysis) {
                    if (analysis.id === that.currentAnalysis) {
                        currentAnalysis = analysis
                    }
                })

                return currentAnalysis
            },
            currentDistricts: function() {
                return this.districts
                        .filter(function(district) { return district.selected })
                        .map(function(district) { return district.id })
            },
            inputPlaceholder: function() {
                return this.currentDistricts.length ? 'izbranih okrajev: ' + this.currentDistricts.length : 'izberi okraj'
            },
            processedMemberData: function() {
                var that = this
                var sortedAndFiltered = this.memberData
                        .filter(function(member) {
                            var partyMatch = true,
                                    districtMatch = true

                            if (that.currentParty !== null) {
                                partyMatch = member.person.party.acronym === that.currentParty
                            }
                            if (that.currentDistricts.length > 0) {
                                districtMatch = member.person.district.reduce(function(prevMatch, memberDistrict) {
                                    return prevMatch || that.currentDistricts.indexOf(String(memberDistrict)) > -1
                                }, false)
                            }

                            return partyMatch && districtMatch
                        })
                        .map(function(member) {
                            if (member.person.district.length === 0) {
                                member.person.formattedDistrict = 'okraj ni vnešen'
                            }
                            else {
                                member.person.formattedDistrict = member.person.district.map(function(memberDistrict) {
                                    var matchingDistrict = that.districts.filter(function(district) {
                                        return district.id === String(memberDistrict)
                                    })[0]
                                    return matchingDistrict.label
                                }).join(', ')
                            }

                            return member
                        })
                        .sort(function(memberA, memberB) {
                            switch (that.currentSort) {
                                case 'analysis':
                                    var a = memberA.results[that.currentAnalysis]
                                    var b = memberB.results[that.currentAnalysis]
                                    return a < b ? -1 : (a > b ? 1 : 0)
                                case 'name':
                                    var a = memberA.person.name
                                    var b = memberB.person.name
                                    return a.localeCompare(b)
                                case 'district':
                                    var a = memberA.person.formattedDistrict
                                    var b = memberB.person.formattedDistrict
                                    return a.localeCompare(b)
                                case 'party':
                                    var a = memberA.person.party.acronym
                                    var b = memberB.person.party.acronym
                                    return a.localeCompare(b)
                                default:
                                    break
                            }
                        })

                if (this.currentSortOrder === 'desc') {
                    sortedAndFiltered.reverse()
                }

                return sortedAndFiltered
            },
            generatedCardUrl: function() {
                var params = {}
                if (this.currentAnalysis !== 'alphabetical') {
                    params.analysis = this.currentAnalysis
                }
                if (this.currentParty !== null) {
                    params.party = this.currentParty
                }
                if (this.currentDistricts.length > 0) {
                    params.districts = this.currentDistricts
                }

                return 'https://glej.parlameter.si/p/seznam-poslancev/' +
                        '?customUrl=' + encodeURIComponent('https://analize.parlameter.si/v1/p/getListOfMembers') +
                        (Object.keys(params).length > 0 ? '&status=' + encodeURIComponent(JSON.stringify(params)) : '')
            }
        },
        created: function() {
            var that = this
            // This should poll the api instead of this static json
            $.getJSON('https://api.myjson.com/bins/4f734', function(response) {
                that.districts = response.districts.map(function(district) {
                    var id = Object.keys(district)[0]
                    return {
                        id: id,
                        label: district[id],
                        selected: false
                    }
                })
                that.memberData = response.data
            })
        },
        methods: {
            selectAnalysis: function(analysisId) {
                this.currentAnalysis = analysisId

                if (this.currentAnalysis === 'alphabetical' && this.currentSort === 'analysis') {
                    this.selectSort('name')
                }
            },
            selectSort: function(sortId) {
                if (this.currentSort === sortId) {
                    this.currentSortOrder = this.currentSortOrder === 'asc' ? 'desc' : 'asc'
                }
                else {
                    this.currentSort = sortId
                    this.currentSortOrder = 'asc'
                }
            },
            selectParty: function(partyId) {
                if (this.currentParty === partyId) {
                    this.currentParty = null
                }
                else {
                    this.currentParty = partyId
                }
            }
        }
    })
</script>



<% include ../partials/footer.ejs %>