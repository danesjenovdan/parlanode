{
  "card": {
    "title": "Other voting events"
  },
  "info": {
    "lead": "An overview of all votes which occurred during the session",
    "text": [
      "For all voting events in a session we count the votes (FOR, AGAINST, ABSTAINED) and the number of MPs who were absent, and display the results.",
      "We obtain voting records from the web page {link1}.",
      "Unexpected votes",
      "To mark unexpected voting results we use the probabilistic method of analysis of main components, {link2} and described in {link3}.",
      "We transform all voting events into four-dimensional vectors where each of the components shows the number of votes for a specific option (FOR, AGAINST, ABSTAINED, ABSENT). Principal component analysis (PCA) model is adjusted to the matrix and function {link4} gives us \"log-likelihood\" of each voting event in our model. The model is set to maximise \"log-likelihood\" value to as many voting events as possible. When we obtain all \"log-likelihood\" values we sort them from smallest to biggest and use a fourth of all voting events which fit the model the least. Compared to our model these voting events stand out and are therefore most \"unexpected\". In the card they are marked with a fire icon."
    ],
    "links": [
      {
        "link": "http://www.dz-rs.si",
        "text": "National Assembly of the Republic of Slovenia"
      },
      {
        "link": "http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html",
        "text": "as implemented in scikit-learn papers"
      },
      {
        "link": "http://www.miketipping.com/papers/met-mppca.pdf",
        "text": "M. Tipping and C. Bishop, Probabilistic Principal Component Analysis, Journal of the Royal Statistical Society, Series B, 61, Part 3, pp. 611-622"
      },
      {
        "link": "https://github.com/scikit-learn/scikit-learn/blob/14031f6/sklearn/decomposition/pca.py#L485",
        "text": "score_samples"
      }
    ]
  }
}
